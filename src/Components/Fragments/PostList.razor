@inject BlazorStaticContentService<PostFrontMatter> postsService

@if (posts.Count() == 0 )
{
    <div class="pt-5">
      <h1 class="display-4 position-absolute top-50 start-50 translate-middle" style="width: max-content;">
        No posts yet...
      </h1>
      <svg class="position-absolute top-50 start-50 translate-middle" style="opacity: 5%;" width="400" height="400" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 16 16">
        <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16M7 6.5C7 7.328 6.552 8 6 8s-1-.672-1-1.5S5.448 5 6 5s1 .672 1 1.5m-2.715 5.933a.5.5 0 0 1-.183-.683A4.5 4.5 0 0 1 8 9.5a4.5 4.5 0 0 1 3.898 2.25.5.5 0 0 1-.866.5A3.5 3.5 0 0 0 8 10.5a3.5 3.5 0 0 0-3.032 1.75.5.5 0 0 1-.683.183M10 8c-.552 0-1-.672-1-1.5S9.448 5 10 5s1 .672 1 1.5S10.552 8 10 8"/>
      </svg>
    </div>
  return;
}

@* todo: add images *@
@* !Pinned posts *@
@if (pinnedPosts.Count() > 0)
{
    <h1>Specials:</h1>

    <div class="row justify-content-center">
    @foreach (var post in pinnedPosts)
        {
            @* todo: figure out images later *@
            <div class="card col-md-5 col-10 m-2 position-relative">
                <svg class="position-absolute top-0 start-0 translate-middle" width="1em" height="1em">
                    <use href="#stars"></use>
                </svg>

                @* <div class="row g-0">
        <div class="col-md-4">
        <img src="http://localhost:5225/local/imgs/wallhaven-gpgzv7.jpg" class="img-fluid"
        alt="...">
        </div> *@

                <div class="col">
                    <div class="card-body">
                        <a class="h5 card-title" href="posts/@post.Url">@post.FrontMatter.Title</a>
                        <h6 class="card-subtitle mt-2 text-body-secondary">@post.FrontMatter.Description</h6>
                    </div>
                </div>
                @* </div> *@

                <svg class="position-absolute top-100 start-100 translate-middle" width="1.5em" height="1.5em">
                    <use href="#stars"></use>
                </svg>
            </div>
        }
    </div>
    <hr />
}

<form>
    <div class="mb-3">
        <input type="text" class="form-control" id="postSearchBar" aria-describedby="postHelp"
            placeholder="search for a post">
    </div>
</form>

@* !Normal posts *@
<div class="row normal-post">
    @foreach (var post in posts)
    {
        <div class="post m-2">
            <div class="card col-12">
                <div class="d-flex flex-row">

                    <div class="image-container">
                        <img src="http://localhost:5225/local/imgs/wallhaven-gpgzv7.jpg" class="rounded img-fluid">
                    </div>

                    <div class="card-body">
                        <a class="h5 card-title stretched-link" href="posts/@post.Url">@post.FrontMatter.Title</a>
                        @if (!string.IsNullOrWhiteSpace(post.FrontMatter.Description))
                        {
                            <h6 class="card-subtitle mt-2 lead">@post.FrontMatter.Description</h6>
                        }
                        <div class="d-flex flex-row mt-2">
                            <small class="me-3 text-body-secondary">
                                <svg class="mb-1" width="1em" height="1em">
                                    <use href="#calendar"></use>
                                </svg>
                                @post.FrontMatter.Published.Value.ToString("MMM dd, yyyy")
                            </small>
                            @if (post.FrontMatter.Tags.Count > 0)
                            {
                                <small class="mr-2 text-body-secondary">
                                    <svg class="pb-1" width="1.2em" height="1.2em">
                                        <use href="#tags"></use>
                                    </svg>
                                    @(string.Join(", ", post.FrontMatter.Tags))
                                </small>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<svg xmlns="http://www.w3.org/2000/svg" class="d-none">
    <symbol id="calendar" viewBox="0 0 16 16">
        <path
            d="M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5M1 4v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4z" />
    </symbol>
    <symbol id="tags" viewBox="0 0 16 16">
        <path
            d="M3 2v4.586l7 7L14.586 9l-7-7zM2 2a1 1 0 0 1 1-1h4.586a1 1 0 0 1 .707.293l7 7a1 1 0 0 1 0 1.414l-4.586 4.586a1 1 0 0 1-1.414 0l-7-7A1 1 0 0 1 2 6.586z" />
        <path
            d="M5.5 5a.5.5 0 1 1 0-1 .5.5 0 0 1 0 1m0 1a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3M1 7.086a1 1 0 0 0 .293.707L8.75 15.25l-.043.043a1 1 0 0 1-1.414 0l-7-7A1 1 0 0 1 0 7.586V3a1 1 0 0 1 1-1z" />
    </symbol>
    <symbol id="stars" viewBox="0 0 16 16">
        <path
            d="M7.657 6.247c.11-.33.576-.33.686 0l.645 1.937a2.89 2.89 0 0 0 1.829 1.828l1.936.645c.33.11.33.576 0 .686l-1.937.645a2.89 2.89 0 0 0-1.828 1.829l-.645 1.936a.361.361 0 0 1-.686 0l-.645-1.937a2.89 2.89 0 0 0-1.828-1.828l-1.937-.645a.361.361 0 0 1 0-.686l1.937-.645a2.89 2.89 0 0 0 1.828-1.828zM3.794 1.148a.217.217 0 0 1 .412 0l.387 1.162c.173.518.579.924 1.097 1.097l1.162.387a.217.217 0 0 1 0 .412l-1.162.387A1.73 1.73 0 0 0 4.593 5.69l-.387 1.162a.217.217 0 0 1-.412 0L3.407 5.69A1.73 1.73 0 0 0 2.31 4.593l-1.162-.387a.217.217 0 0 1 0-.412l1.162-.387A1.73 1.73 0 0 0 3.407 2.31zM10.863.099a.145.145 0 0 1 .274 0l.258.774c.115.346.386.617.732.732l.774.258a.145.145 0 0 1 0 .274l-.774.258a1.16 1.16 0 0 0-.732.732l-.258.774a.145.145 0 0 1-.274 0l-.258-.774a1.16 1.16 0 0 0-.732-.732L9.1 2.137a.145.145 0 0 1 0-.274l.774-.258c.346-.115.617-.386.732-.732z" />
    </symbol>
</svg>

<script suppress-error="BL9992" src="Components/Fragments/PostList.razor.js"></script>

@code {
    IEnumerable<Post<PostFrontMatter>> posts;
    IEnumerable<Post<PostFrontMatter>> pinnedPosts;

    protected override void OnInitialized()
    {
        posts = postsService.BlogPosts.OrderByDescending(x => x.FrontMatter.Title);
        pinnedPosts = posts.Where(x => x.FrontMatter.IsPinned);
    }
}